#version 460

#include "common.glsl"

layout(local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE) in;

layout(rgba8, set = 0, binding = 0) uniform image2D in_image;
layout(rgba8, set = 0, binding = 1) uniform image2D out_image;

layout(push_constant) uniform PushConstants {
    vec2 inverse_resolution;
    vec2 offset;
    vec2 misc;
} push_constants;

#define V2F16(v) ((v.y * float(0.0039215689)) + v.x)

void main() {
    ivec2 sample_pos = ivec2(gl_GlobalInvocationID.xy);
    vec2 uvs = vec2(sample_pos + vec2(0.5)) / vec2(imageSize(out_image));

    float closest_dist = 9999999.9;
    vec4 closest_pos = vec4(0.0);
    for (float x = -1.0; x <= 1.0; x += 1.0) {
        for (float y = -1.0; y <= 1.0; y += 1.0) {
            ivec2 offset = sample_pos;
            offset += ivec2(x, y) * ivec2(push_constants.offset);

            vec4 pos = vec4(0.0);
            if (push_constants.misc.x == 1.0) {
                pos = imageLoad(in_image, offset);
            }
            else {
                pos = imageLoad(out_image, offset);
            }
            float dist = distance(vec2(V2F16(pos.xy), V2F16(pos.zw)), uvs);

            if (pos.x != 0.0 && pos.y != 0.0 && dist < closest_dist) {
                closest_dist = dist;
                closest_pos = pos;
            }
        }
    }

    if (push_constants.misc.x == 1.0) {
        imageStore(out_image, sample_pos, closest_pos);
    }
    else {
        imageStore(in_image, sample_pos, closest_pos);
    }
}
