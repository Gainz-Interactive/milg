#version 460

#include "common.glsl"

layout(local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE) in;

layout(rgba8, set = 0, binding = 0) uniform readonly image2D in_image;
layout(rgba8, set = 0, binding = 1) uniform writeonly image2D out_image;

void main() {
    ivec2 sample_pos = ivec2(gl_GlobalInvocationID.xy);
    vec2 uv = vec2(sample_pos + vec2(0.5)) / vec2(imageSize(out_image));

    float a = imageLoad(in_image, sample_pos).a;

    vec4 color = vec4(F16V2(uv.x * a), F16V2(uv.y * a));
    imageStore(out_image, sample_pos, color);
}
